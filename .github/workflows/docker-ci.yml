###################################################################################
#
#   2021.12.28 김준우
#
#   ** 실제 CI/CD 사용하기 전 체크 항목 **
#   1. ReactJS Project인지 확인
#   2. REGISTRY_IMAGE 뒤에 `-flow`는 제거
#   3. DOCKER_FILE 파일명, ARG == --build-arg 명령어 체크
#   4. 테스트 배포 확인 후 사용
#   5. secrets CR_TOKEN 유효, 저장소 선택 확인
#
##################################################################################

name: docker-ci-workflow

on:
  push:
    branches: [ master, release/**, hotfix/**, develop, feature/**, bugfix/** ]
  pull_request:
    branches: [ master, release/**, hotfix/**, develop, feature/**, bugfix/** ]

env:
  CONTAINER_REGISTRY: ghcr.io
  DOCKER_FILE: Dockerfile.flow

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
#     소스 체크아웃
    - uses: actions/checkout@v2
    
#     저장소이름 추출
    - name: PROJECT_NAME Exctract
      run: echo "PROJECT_NAME=$(echo $GITHUB_REPOSITORY|cut -d '/' -f 2)" >> $GITHUB_ENV

#     브랜치 추출
    - name: BRANCH_VERSION Exctract
      run: echo "BRANCH_VERSION=$(echo $GITHUB_REF_NAME|cut -d '/' -f 2)" >> $GITHUB_ENV

#     소스 버전 추출
    - name: SOURCE_VERSION Exctract
      run: echo "SOURCE_VERSION=$(cat package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed -E 's/(version)|[:,\",]//g' | tr -d '[[:space:]]')" >> $GITHUB_ENV
    
#     nodejs 활성화
    - name: Setup Node.js environment
      uses: actions/setup-node@v2.5.1
      with:
        node-version: v10.20.1
        
#     npm or yarn install cache
#     - name: Cache node modules
#       id: node-cache
#       uses: actions/cache@v2
#       env:
#         cache-name: cache-node-modules
#       with:
#         path: node_modules
#         key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
#         restore-keys: ${{ runner.os }}-node-modules-
#     - name: Install Dependencies
#       if: steps.node-cache.outputs.cache-hit != 'true'
#       run: npm install
    - name: module install
      run: npm install
            
    - name: npm ci
      run: npm ci
    
    - name: ls -al 
      run: ls- al 
      
    - name: ls -al build
      run: ls- al build

# #     도커 로그인
#     - name: Docker Login
#       uses: docker/login-action@v1.12.0
#       with:
#         registry: ${{ env.CONTAINER_REGISTRY }}
# #         danawalab 계정에선 토큰이 안보임..
#         username: joonwoo8888
#         password: ${{ secrets.CR_TOKEN }}

# #     도커 빌드/푸시
#     - name: Docker Build & Push Action
#       uses: mr-smithers-excellent/docker-build-push@v5.6
#       with:
#         registry: ${{ env.CONTAINER_REGISTRY }}
#         dockerfile: ${{ env.DOCKER_FILE }}
#         buildArgs: VERSION=${{env.SOURCE_VERSION}},PROJECT_NAME=${{ env.PROJECT_NAME }}
#         image: ${{ env.PROJECT_NAME }}
#         tags: ${{ env.BRANCH_VERSION }}
    
    
